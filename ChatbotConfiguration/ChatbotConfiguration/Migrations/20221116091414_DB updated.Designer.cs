// <auto-generated />
using ChatbotConfiguration.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatbotConfiguration.Migrations
{
    [DbContext(typeof(ChatBotContext))]
    [Migration("20221116091414_DB updated")]
    partial class DBupdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChatbotConfiguration.Data.options", b =>
                {
                    b.Property<int>("optionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("optionsId"), 1L, 1);

                    b.Property<string>("optionsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quetionsId")
                        .HasColumnType("int");

                    b.Property<int>("quetionsTargetId")
                        .HasColumnType("int");

                    b.HasKey("optionsId");

                    b.HasIndex("quetionsId");

                    b.ToTable("tbl_Options");
                });

            modelBuilder.Entity("ChatbotConfiguration.Data.quetions", b =>
                {
                    b.Property<int>("quetionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("quetionsId"), 1L, 1);

                    b.Property<int>("botId")
                        .HasColumnType("int");

                    b.Property<string>("quetionsDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quetionsSequence")
                        .HasColumnType("int");

                    b.Property<int>("quetionsTargetId")
                        .HasColumnType("int");

                    b.Property<string>("quetionsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("quetionsId");

                    b.ToTable("tbl_Quetions");
                });

            modelBuilder.Entity("ChatbotConfiguration.Data.userReplies", b =>
                {
                    b.Property<int>("userRepliesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userRepliesId"), 1L, 1);

                    b.Property<int>("quetionsId")
                        .HasColumnType("int");

                    b.Property<int>("userIdentity")
                        .HasColumnType("int");

                    b.Property<string>("userReply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userRepliesId");

                    b.HasIndex("quetionsId");

                    b.ToTable("tbl_UserReplies");
                });

            modelBuilder.Entity("ChatbotConfiguration.Data.options", b =>
                {
                    b.HasOne("ChatbotConfiguration.Data.quetions", "quetions")
                        .WithMany()
                        .HasForeignKey("quetionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("quetions");
                });

            modelBuilder.Entity("ChatbotConfiguration.Data.userReplies", b =>
                {
                    b.HasOne("ChatbotConfiguration.Data.quetions", "quetions")
                        .WithMany()
                        .HasForeignKey("quetionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("quetions");
                });
#pragma warning restore 612, 618
        }
    }
}
